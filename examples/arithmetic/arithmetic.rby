%token NUMBER

%left OP_PLUS OP_MINUS

%%

arithmetic:
  expression[x]
  { self.result = x }
;

expression :
  NUMBER
| addition
| subtraction
;

addition :
  expression[left] OP_PLUS expression[right]
  { left + right }
;

subtraction :
  expression[left] OP_MINUS expression[right]
  { left - right }
;

%%

class Arithmetic
  def lex
    c = read_over_whitespace
    case c
    when '0'..'9'
      number = read_integer(c)
      self.lex_value = number.to_i
      return Tokens::NUMBER

    when '+'
      return Tokens::OP_PLUS

    when '-'
      return Tokens::OP_MINUS

    else
      return nil
    end
  end
end
